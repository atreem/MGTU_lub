#include <iostream>
#include <string.h>


int main(int argc, char const *argv[])
{

/*1. Ввести с клавиатуры строку не более 20 символов. Вывести строку на экран. 

1.1 Ввести с клавиатуры символ.
Подсчитать, сколько раз введенный символ встречается в строке.

1.2 Выделить память под вторую строку.
Переписать во вторую строку часть первой строки от начала до первого символа,
равного введенному с клавиатуры. Сам символ включить (он будет последним
в новой строке). Вывести новую строку.*/
    {
        char list_ch[21];
        printf("input string<21\n");
        fgets(list_ch,21,stdin);
        printf("%s\n",list_ch);
        char sim;
/*1.1 Ввести с клавиатуры символ.
Подсчитать, сколько раз введенный символ встречается в строке.*/        
        printf("input sim\n");
        scanf("\n%c",&sim);
        int count=0;
        {
            int i=0;
            while (list_ch[i])
            {
                if(list_ch[i++]==sim) count++;
            }            
        }
        printf("count = %d\n",count);
/*1.2 Выделить память под вторую строку.
Переписать во вторую строку часть первой строки от начала до первого символа,
равного введенному с клавиатуры. Сам символ включить (он будет последним
в новой строке). Вывести новую строку.*/

        char new_list_ch[21];
        if (count)
        {
            
            int i=0;bool flag=1;
            while (list_ch[i] && flag)
            {
                new_list_ch[i]=list_ch[i];
                if(list_ch[i++]==sim) flag=0;
            } 
            new_list_ch[i]='\0';
        }
        else 
        {
            strcpy(list_ch,new_list_ch);
            printf("ther are no char %c\n",sim);
        }
        printf("new_list_ch = %s\n",new_list_ch);
    }


/*2. Ввести с клавиатуры строки s1[11], s2[11]. Выделить память под строку s3[21].
2.1 Строку s1 скопировать в s3 (strcpy). Вывести строки на экран.
2.2 Строку s2 скопировать в s3 (strcpy). Вывести строки на экран.
2.3 Очистить строку s3. Вывести ее на экран.
2.4 Скопировать в s3 первые два символа строки s1 (предполагается, что они есть).
Добавить в s3 первые два символа строки s2 (предполагается, что они есть) – 
команда strncat. Вывести s3 на экран.
2.5 Определить длины всех строк.
2.6 Вывести строки s1 и s2 в алфавитном порядке. */
    {
        char s1[11],s2[11],s3[21];
        printf("input s1<=10sim\n");
        getchar();
        fgets(s1,11,stdin);
        printf("input s2<=10sim\n");
        fgets(s2,11,stdin);
        //2.1 Строку s1 скопировать в s3 (strcpy). Вывести строки на экран.
        strcpy(s3,s1);
        printf("s3 = %ss1 = %s\n",s3,s1);
        //2.2 Строку s2 скопировать в s3 (strcpy). Вывести строки на экран.
        strcpy(s3,s2);
        printf("s3 = %ss2 = %s\n",s3,s2);
        //2.3 Очистить строку s3. Вывести ее на экран.
        s3[0]='\0';
        printf("%s\n",s3);
        //2.4 Скопировать в s3 первые два символа строки s1 (предполагается, что они есть).Добавить в s3 первые два символа строки s2 (предполагается, что они есть) – команда strncat. Вывести s3 на экран.
        strncat(s3,s1,2);
        strncat(s3,s2,2);
        printf("s3 = %s\n",s3);
        //2.5 Определить длины всех строк.
        printf("len s1=%d\nlen s2=%d\nlen s3=%d\n\n",strlen(s1),strlen(s2),strlen(s3));
        // 2.6 Вывести строки s1 и s2 в алфавитном порядке.
        if(strcmp(s1,s2) < 0) printf("%s%s\n",s1,s2);
        else printf("%s%s\n",s2,s1);
        
    }
/*3. Строку str[51] ввести с клавиатуры. 
Строка состоит из нескольких слов, разделенных пробелом. 
Записать каждое слово в строку и вывести на экран 
(для вывода использовать одну строку, куда поочередно записывать все слова).*/
    {
        printf("input words\n");
        char str[51];
        
        fgets(str,51,stdin);

        
        char output[52];
        {
            int i=-1;
            int j;
            while (str[++i])
            {
                j=0;
                while (str[i]!=' ' && str[i])
                {
                    output[j++]=str[i++];
                }
                output[j]='\0';
                printf("%s\n",output);
            }
        }
        

        // int i=0;
        // char *list[51];
        // char *p  = strtok(str, " ");
        // list[i++] = p;
        // while (p != NULL) 
        // {
        //     list[i++] = p;
        //     p =  strtok(NULL, " ");
        // }

        // for (int j = 0; j < i; j++)
        // {
        //     puts(list[j]);
        // }
        
    }



    return 0;
}
